{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleKeyboardClick","event","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,IAFT,EAaEC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAd/B,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,uBAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,uBAV/C,oBAiBE,WACE,IAAQD,EAAQM,KAAKP,MAAbC,IAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGR,EAAG,mCAC4BA,EAD5B,KAEA,kCAzBd,GAAyBS,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.8dac9c1e.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  key: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyboardClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyboardClick);\n  }\n\n  handleKeyboardClick = (event: KeyboardEvent) => {\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {key\n            ? `The last pressed key is [${key}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}